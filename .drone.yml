kind: pipeline
type: docker
name: backend-ci

# Define the volume globally at the top level
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

steps:
  # Rust checks and tests
  - name: rust-checks
    image: rust:1.75
    environment:
      CARGO_TERM_COLOR: always
    commands:
      - cd apps/backend/task-api
      - rustc --version; cargo --version
      - cargo fetch
      - cargo build --locked
      - cargo test --locked

  # Build and push Docker image to local registry with commit tag
  - name: docker-build-push
    image: docker:24
    # Reference the global volume by its name. This is the correct, simple syntax.
    volumes:
      - dockersock 
    environment:
      IMAGE_REGISTRY: registry.local:5000
    commands:
      - set -euo pipefail
      - IMAGE_TAG=$(echo ${DRONE_COMMIT_SHA} | cut -c1-7)
      - echo "Using tag: ${IMAGE_TAG}"
      - cd apps/backend/task-api
      - ./build-and-push.sh "$IMAGE_TAG"

  # Bump image tag in infra repo and push
  - name: update-infra-repo
    image: alpine/git:2.36.3
    environment:
      GIT_AUTHOR_NAME: drone-bot
      GIT_AUTHOR_EMAIL: drone-bot@gitea.local
      GIT_COMMITTER_NAME: drone-bot
      GIT_COMMITTER_EMAIL: drone-bot@gitea.local
      GITEA_TOKEN: 561c4bd7f5f64078c858e732f6ffe763f8e70432
      GITEA_USER: michealndoh
    commands:
      - set -euo pipefail
      - IMAGE_TAG=$(echo ${DRONE_COMMIT_SHA} | cut -c1-7)
      - REPO_URL="http://gitea.gitea.svc.cluster.local:3000/michealndoh/Cloud-native-infra.git"
      - git clone "http://${GITEA_USER}:${GITEA_TOKEN}@${REPO_URL#http://}" infra
      - cd infra
      - grep -R "registry.local:5000/task-api:" -n || true
      - sed -i "s|registry.local:5000/task-api:.*|registry.local:5000/task-api:${IMAGE_TAG}|" apps/backend/task-api-deployment.yaml
      - git status --porcelain | grep . || { echo "No changes to commit"; exit 0; }
      - git add apps/backend/task-api-deployment.yaml
      - git commit -m "ci: bump task-api image to ${IMAGE_TAG}"
      - git push origin HEAD:main

# Trigger on all branches
trigger:
  branch: [ main ]
  event: [ push ]